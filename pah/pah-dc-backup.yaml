---
- name: Include and execute pah-stop-services playbook
  hosts: dc-pah
  become: yes
  vars:
    ansible_user: quickcluster
  tasks:
    - name: Stop services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - pulpcore.service
        - pulpcore-api.service
        - pulpcore-content.service
        - pulpcore-worker@1.service
        - pulpcore-worker@2.service
        - nginx.service
        - redis.service
      ignore_errors: yes

- name: Backup dc pah nodes
  hosts: dc-pah-1
  become: yes
  vars:
    ansible_user: quickcluster
  tasks:
    - name: Take a backup of /etc/pulp directory
      shell: sudo tar cvfp /var/lib/pulp/etc_pulp.tar -C /etc/pulp .

    - name: Take a backup of /var/lib/pulp directory
      shell: sudo tar cvfp /var/lib/pulp/var_lib_pulp.tar -C /var/lib/pulp .

    - name: Check if /etc/pulp backup file exists
      stat:
        path: /var/lib/pulp/etc_pulp.tar
      register: etc_pulp_backup_status1

    - name: Check if /var/lib/pulp backup file exists
      stat:
        path: /var/lib/pulp/var_lib_pulp.tar
      register: var_lib_pulp_backup_status1
      
    - name: Print message if /etc/pulp backup file exists
      debug:
        msg: "/etc/pulp backup file {{ etc_pulp_backup_status1.stat.path }} exists."
      when: etc_pulp_backup_status1.stat.exists

    - name: Print message if /var/lib/pulp backup file exists
      debug:
        msg: "/var/lib/pulp backup file {{ var_lib_pulp_backup_status1.stat.path }} exists."
      when: var_lib_pulp_backup_status1.stat.exists

- name: Backup automationhub database dump
  hosts: dc-db
  become: yes
  vars:
    ansible_user: quickcluster
  tasks:
    - name: Take a backup of automationhub database
      shell: sudo -u postgres pg_dump -d automationhub > /tmp/automationhub.dump
      become_user: root

    - name: Copy backup to /var/lib/pulp directory
      copy:
        src: /tmp/automationhub.dump
        dest: /var/lib/pulp/
        remote_src: true

    - name: Check if backup file exists in /var/lib/pulp
      stat:
        path: /var/lib/pulp/automationhub.dump
      register: backup_file_status1

    - name: Print message if backup file exists
      debug:
        msg: "Backup file {{ backup_file_status1.stat.path }} exists."
      when: backup_file_status1.stat.exists
